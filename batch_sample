#!/bin/bash

AWS_BUCKET_NAME="almv-rct01400-msh-uploads/FASTQ/"
TEMP_DIRECTORY="./temp"
OUTPUT_DIRECTORY="./Sampled"
AWS_FILES=$(aws s3 ls s3://$AWS_BUCKET_NAME | awk '{print $4}')

# Create temp directory if it does not exist
if [[ ! -d "$TEMP_DIRECTORY" ]]; then
  mkdir "$TEMP_DIRECTORY"
fi

# Create output directory if it does not exist
if [[ ! -d "$OUTPUT_DIRECTORY" ]]; then
  mkdir "$OUTPUT_DIRECTORY"
fi

# Initialize a counter for the number of downloaded files
downloaded_files=0

# Loop through the files
for FILE in $AWS_FILES; do
  if [[ $FILE == *.fastq.gz ]]; then
    FULL_PATH="$AWS_BUCKET_NAME$FILE"

    # Check if file has already been processed
    BASENAME=$(basename "$FILE" .fastq.gz)
    OUTPUT_FILE="$OUTPUT_DIRECTORY/$BASENAME.sampled.fastq.gz"
    if [[ -f "$OUTPUT_FILE" ]]; then
      echo "Output file $OUTPUT_FILE already exists. Skipping to the next file."
      continue
    fi

    # Check if file has already been downloaded
    TARGET_FILE="$TEMP_DIRECTORY/$FILE"
    if [[ -f "$TARGET_FILE" ]]; then
      echo "File $FILE already exists in the temporary directory. Skipping download."
    else
      aws s3 cp "s3://$FULL_PATH" "$TEMP_DIRECTORY/$FILE"
      ((downloaded_files++))
    fi

    # Check if 3 files have been downloaded
    if ((downloaded_files % 3 == 0)); then
      # Perform the action on the batch of files in parallel using seqtk
      echo "Batch downloaded. Performing action on files in parallel:"
      for BATCH_FILE in "$TEMP_DIRECTORY"/*.fastq.gz; do
        (seqtk -s100 "$BATCH_FILE" 1000 > "$OUTPUT_DIRECTORY/$(basename "$BATCH_FILE" .fastq.gz).sampled.fastq.gz" &)  # Run seqtk command in the background
      done
      
      # Wait for all background processes to finish
      wait
      
      # Remove downloaded files
      rm "$TEMP_DIRECTORY"/*.fastq.gz
    fi
  fi
done

# Perform the action on any remaining files in the temp directory
if ((downloaded_files % 3 != 0)); then
  echo "Batch downloaded. Performing action on files in parallel:"
  for BATCH_FILE in "$TEMP_DIRECTORY"/*.fastq.gz; do
    (seqtk -s100 "$BATCH_FILE" 1000 > "$OUTPUT_DIRECTORY/$(basename "$BATCH_FILE" .fastq.gz).sampled.fastq.gz" &)  # Run seqtk command in the background
  done

  # Wait for all background processes to finish
  wait

  # Remove downloaded files
  rm "$TEMP_DIRECTORY"/*.fastq.gz
fi

wait
